{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","personService","getAll","axios","get","create","newObject","post","update","id","put","delete","Filter","value","onChange","PersonForm","onSubmit","nameValue","onNameChange","numberValue","onNumberChange","type","Persons","persons","handleDelete","map","person","name","number","onClick","bind","Notification","notification","notificationStyle","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","style","message","App","useState","setPersons","newName","setNewName","nameFilter","setNameFilter","newNumber","setNewNumber","setNotification","useEffect","then","response","data","personsToShow","filter","toLowerCase","includes","showNotification","setTimeout","event","target","preventDefault","personObject","previousEntry","find","window","confirm","catch","error","concat","alert","personToDelete","newPersons","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ede6927c.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseUrl)\r\n}\r\n\r\nconst create = newObject => {\r\n  return axios.post(baseUrl, newObject)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  return axios.put(`${baseUrl}/${id}`, newObject)\r\n}\r\n\r\nconst deleteById = (id) => {\r\n  return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nconst personService = { \r\n  getAll: getAll, \r\n  create: create, \r\n  update: update,\r\n  delete: deleteById, \r\n}\r\n\r\nexport default personService","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\n\nconst Filter = ({value, onChange}) => (<div>filter shown with <input value={value} onChange={onChange}/></div>)\n\nconst PersonForm = ({onSubmit, nameValue, onNameChange, numberValue, onNumberChange}) => (\n  <form onSubmit={onSubmit}>\n    <div>\n      name: <input value={nameValue} onChange={onNameChange}/>\n      number: <input value={numberValue} onChange={onNumberChange}/>\n    </div>\n    <div>\n      <button type=\"submit\">add</button>\n    </div>\n  </form>\n)\n\nconst Persons = ({persons, handleDelete}) => (\n  persons.map((person) => {\n    return <p key={person.name}>{person.name} {person.number} <button onClick={handleDelete.bind(this, person)}>delete</button></p>\n  })\n)\n\nconst Notification = ({notification}) => {\n\n  if (!notification) return null\n\n  const notificationStyle = {\n    color: notification.color,\n    background: \"lightgrey\",\n    fontSize: \"24px\",\n    borderStyle: \"solid\",\n    borderRadius: \"5px\",\n    padding: \"10px\",\n    marginBottom: \"10px\",\n  }\n\n  return (\n    <div style={notificationStyle}>\n      {notification.message}\n    </div>\n  )\n}\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ nameFilter, setNameFilter ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ notification, setNotification ] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(response => {\n        setPersons(response.data)\n      })\n  }, [])\n\n  const personsToShow = persons.filter((person)=>person.name.toLowerCase().includes(nameFilter.toLowerCase()))\n\n  const showNotification = (message, color) => {\n    setNotification({message, color})\n    setTimeout(() => {\n      setNotification(null)\n    }, 5000)\n  }\n\n  const onFormSubmit = (event) => {\n    event.preventDefault()\n    const personObject = {name: newName, number: newNumber}\n    const previousEntry = persons.find(person=>(person.name===newName))\n    if (!newName || !newNumber) {\n      alert(\"Please enter a name and phonenumber\")\n    } else if (previousEntry) {\n      if (window.confirm(`${previousEntry.name} is already added to phonebook, replace the old number with a new one?`)) {\n        personObject.id = previousEntry.id\n        personService\n        .update(previousEntry.id, personObject)\n        .then(response => {\n          setPersons(persons.map(person => person.id === previousEntry.id ? personObject : person))\n          setNewName('')\n          setNewNumber('')\n          showNotification(`Updated ${personObject.name}`, \"green\")\n        }).catch(error => {\n          showNotification(`Information of ${personObject.name} has already been removed from server`, \"red\")\n          setPersons(persons.filter(person => person.id !== previousEntry.id))\n        })\n      }\n    }\n    else{\n      personService\n      .create(personObject)\n      .then(response => {\n        setPersons(persons.concat(response.data))\n        setNewName('')\n        setNewNumber('')\n        showNotification(`Added ${personObject.name}`, \"green\")\n      })\n    }\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleNameFilterChange = (event) => {\n    setNameFilter(event.target.value)\n  }\n\n  const handleDelete = (personToDelete) => {\n    if (window.confirm(`Delete ${personToDelete.name}?`)) {\n      personService\n        .delete(personToDelete.id)\n        .then(response => {\n          const newPersons = persons.filter(person => person.id !== personToDelete.id)\n          setPersons(newPersons)\n          showNotification(`Deleted ${personToDelete.name}`, \"green\")\n        })\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n        <Notification notification={notification}/>\n        <Filter value={nameFilter} onChange={handleNameFilterChange}/>\n      <h2>add a new</h2>\n        <PersonForm onSubmit={onFormSubmit} nameValue={newName} numberValue={newNumber} onNameChange={handleNameChange} onNumberChange={handleNumberChange}/>\n      <h2>Numbers</h2>\n        <Persons persons={personsToShow} handleDelete={handleDelete}/>\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}